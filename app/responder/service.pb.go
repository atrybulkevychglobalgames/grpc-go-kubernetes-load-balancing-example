// Code generated by protoc-gen-go. DO NOT EDIT.
// source: app/responder/service.proto

package responder

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetNameRequest struct {
	Value                string   `protobuf:"bytes,1,opt,name=Value,proto3" json:"Value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNameRequest) Reset()         { *m = GetNameRequest{} }
func (m *GetNameRequest) String() string { return proto.CompactTextString(m) }
func (*GetNameRequest) ProtoMessage()    {}
func (*GetNameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_911a7590c8c6b115, []int{0}
}

func (m *GetNameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNameRequest.Unmarshal(m, b)
}
func (m *GetNameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNameRequest.Marshal(b, m, deterministic)
}
func (m *GetNameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNameRequest.Merge(m, src)
}
func (m *GetNameRequest) XXX_Size() int {
	return xxx_messageInfo_GetNameRequest.Size(m)
}
func (m *GetNameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNameRequest proto.InternalMessageInfo

func (m *GetNameRequest) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type GetNameResponse struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNameResponse) Reset()         { *m = GetNameResponse{} }
func (m *GetNameResponse) String() string { return proto.CompactTextString(m) }
func (*GetNameResponse) ProtoMessage()    {}
func (*GetNameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_911a7590c8c6b115, []int{1}
}

func (m *GetNameResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNameResponse.Unmarshal(m, b)
}
func (m *GetNameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNameResponse.Marshal(b, m, deterministic)
}
func (m *GetNameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNameResponse.Merge(m, src)
}
func (m *GetNameResponse) XXX_Size() int {
	return xxx_messageInfo_GetNameResponse.Size(m)
}
func (m *GetNameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNameResponse proto.InternalMessageInfo

func (m *GetNameResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetNameResponse) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*GetNameRequest)(nil), "responder.GetNameRequest")
	proto.RegisterType((*GetNameResponse)(nil), "responder.GetNameResponse")
}

func init() { proto.RegisterFile("app/responder/service.proto", fileDescriptor_911a7590c8c6b115) }

var fileDescriptor_911a7590c8c6b115 = []byte{
	// 156 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4e, 0x2c, 0x28, 0xd0,
	0x2f, 0x4a, 0x2d, 0x2e, 0xc8, 0xcf, 0x4b, 0x49, 0x2d, 0xd2, 0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c,
	0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x84, 0x4b, 0x28, 0xa9, 0x71, 0xf1, 0xb9,
	0xa7, 0x96, 0xf8, 0x25, 0xe6, 0xa6, 0x06, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0x89, 0x70,
	0xb1, 0x86, 0x25, 0xe6, 0x94, 0xa6, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x41, 0x38, 0x4a,
	0xd6, 0x5c, 0xfc, 0x70, 0x75, 0x20, 0xbd, 0xc5, 0xa9, 0x42, 0x42, 0x5c, 0x2c, 0x20, 0x3e, 0x54,
	0x1d, 0x98, 0x8d, 0xd0, 0xcc, 0x84, 0xa4, 0xd9, 0x28, 0x8c, 0x4b, 0x20, 0x08, 0x66, 0x63, 0x30,
	0xc4, 0x25, 0x42, 0x4e, 0x5c, 0xec, 0x50, 0x03, 0x85, 0x24, 0xf5, 0xe0, 0xee, 0xd1, 0x43, 0x75,
	0x8c, 0x94, 0x14, 0x36, 0x29, 0x88, 0xfd, 0x4a, 0x0c, 0x49, 0x6c, 0x60, 0xef, 0x18, 0x03, 0x02,
	0x00, 0x00, 0xff, 0xff, 0x9d, 0x55, 0xa5, 0xf0, 0xed, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ResponderServiceClient is the client API for ResponderService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ResponderServiceClient interface {
	GetName(ctx context.Context, in *GetNameRequest, opts ...grpc.CallOption) (*GetNameResponse, error)
}

type responderServiceClient struct {
	cc *grpc.ClientConn
}

func NewResponderServiceClient(cc *grpc.ClientConn) ResponderServiceClient {
	return &responderServiceClient{cc}
}

func (c *responderServiceClient) GetName(ctx context.Context, in *GetNameRequest, opts ...grpc.CallOption) (*GetNameResponse, error) {
	out := new(GetNameResponse)
	err := c.cc.Invoke(ctx, "/responder.ResponderService/GetName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ResponderServiceServer is the server API for ResponderService service.
type ResponderServiceServer interface {
	GetName(context.Context, *GetNameRequest) (*GetNameResponse, error)
}

// UnimplementedResponderServiceServer can be embedded to have forward compatible implementations.
type UnimplementedResponderServiceServer struct {
}

func (*UnimplementedResponderServiceServer) GetName(ctx context.Context, req *GetNameRequest) (*GetNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetName not implemented")
}

func RegisterResponderServiceServer(s *grpc.Server, srv ResponderServiceServer) {
	s.RegisterService(&_ResponderService_serviceDesc, srv)
}

func _ResponderService_GetName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResponderServiceServer).GetName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/responder.ResponderService/GetName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResponderServiceServer).GetName(ctx, req.(*GetNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ResponderService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "responder.ResponderService",
	HandlerType: (*ResponderServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetName",
			Handler:    _ResponderService_GetName_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "app/responder/service.proto",
}
